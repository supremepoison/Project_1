电子词典
    1.用户可以登录和注册
        登录凭借用户名和密码登录
        注册要求用户必须填写用户名密码,其他内容自己拟定
        用户名要求不能重复
    2.用户信息需要长期保存已满足随时登录
        要求使用数据库保存
    3.能够满足多个用户同时登录操作的需要
    4.项目分为客户端和服务端,客户端负责请求和展示数据,其余处理由服务端完成
    5.客户端启动即进入一级界面(界面print打印)
        一级界面功能:
            登录 注册 退出
    6.用户登录后即进入二级界面(注册后是否处于登录状态自定)
        二级界面功能:
            查单词 查看历史记录 注销
            查单词:
                可以循环输入单词,获取单词解释
                    提示:每个单词占一行
                        单词按照顺序排列
                        单词和解释之间一定有空格
                        可以选择直接操作文本,或者将单词本导入数据库
            查看历史记录:
                格式:
                    name word time
                    可以显示登录人员查的所有单词或者最近10条
            注销:
                返回一级界面


1.确定技术点
    用什么并发?     fork 多进程
    用什么套接字?   tcp套接字
    用什么数据库?    mysql
    文件处理还是数据库查询?

2.建立数据库 设计表
    如需要将单词本导入数据库,则编程完成导入
        用户表:
            id    name    password
        历史记录:
            id    name    word      time
        单词表:
            id      word    interpret    
3.结构设计
    服务器:
        创建套接字
        创建父子进程
        子进程等待处理客户端请求
        父进程继续等待连接下一个客户端
        具体请求调用具体函数处理

    客户端:
        创建套接字
        发起连接请求
        进入一级界面
        发起请求(登录,注册,退出)
        登录成功
        进入二级界面
        发起请求(查询,历史记录)
        
4.完成通信的搭建
5.功能分析,根据分析完成功能代码
    注册:
        客户端:
            1.输入注册信息
            2.将信息发送给服务器
            3.得到服务器反馈
        服务端:
            1.接受请求
            2.判断是否允许注册
            3.将结果反馈给客户端
            4.将注册插入数据库

    登录:
        客户端:
            1.输入用户名和密码
            2.将信息发送给服务器
            3.得到服务器反馈
            4.进入二级界面
        服务端:
            1.接受请求
            2.判断是否允许登录
            3.反馈结果

    查询:
        客户端：
            １.发送请求　Ｑ　 name　word
            2.接收返回结果
            3.## 退出查词

        服务端:
            1.接受请求
            2.查找单词,反馈结果
            3.插入历史记录
    


cookie 
    import getpass
    功能:
        隐藏密码


    
